Tested on Legion Pro 7i 16IRX8H with Fedora Workstation 40 KDE.
Battery Charging Limiter on Legion Pro 7i 16IRX8H: /sys/bus/platform/drivers/ideapad_acpi/VPC2004:00/conservation_mode
Fedora quick docs: https://docs.fedoraproject.org/en-US/quick-docs/

1) General setup:
	- Enable Nvidia Non-Free Repos in SW Center.
	- Enable & install Google Chrome Repos in SW Center.
	- Enable & install Steam Repos in SW Center.
	- Enable FlatHub Repos in SW Center.
	- [Optional] Install snapd from SW Center.
	- Add max_parallel_downloads=10 to /etc/dnf/dnf.conf
	- Make sure that Bluetooth is always enabled at start-up.
		- Add AutoEnable=true to /etc/bluetooth/main.conf, if needed.

2) Perform a system update and install a basic set of packages:
	- sudo dnf check-update
	- sudo dnf upgrade
	- sudo systemctl reboot
	- sudo dnf groupinstall "Development Tools"
	- sudo dnf groupinstall "Development Libraries"
	- sudo dnf groupinstall "C Development Tools and Libraries"
	- sudo dnf install htop
	- sudo dnf install dracut-config-rescue
	- sudo dnf install efivar
	- sudo dnf install acpitool
	- sudo systemctl reboot

3) Setup SSH server:
	- ssh-keygen -t rsa -b 4096
	- eval "$(ssh-agent -s)"
	- sudo systemctl enable sshd
	- sudo systemctl start sshd
	- sudo touch /etc/ssh/sshd_config.d/${USER}.conf
	- Add the following settings into /etc/ssh/sshd_config.d/${USER}.conf:
		PasswordAuthentication no
		PermitRootLogin no
		PubkeyAuthentication yes
	- touch ~/.ssh/authorized_keys			--> add client public keys to this file
	- sudo systemctl reload sshd
	- Share WiFi password for all users. On the command-line, this can be checked with nmcli:
		- nmcli con show						--> to get GUIDs for the networks
		- nmcli connection show "WiFi-SSID"				--> connection.permissions must be set to "--"
		- nmcli con modify Network-GUID connection.permissions ''	--> to set connection.permissions to "--" if not already so

4) [Optional] Prepare signing keys for SecureBoot:
	- For details, see https://rpmfusion.org/Howto/Secure%20Boot
	- sudo dnf install kmodtool akmods mokutil openssl
	- sudo kmodgenca -a
	- sudo mokutil --import /etc/pki/akmods/certs/public_key.der
	- sudo systemctl reboot
	- Enroll the key with UEFI.

5) [Optional] Install Nvidia proprietary drivers:
	- For details, see https://rpmfusion.org/Howto/NVIDIA
	- sudo dnf install gcc kernel-headers kernel-devel
	- sudo dnf install akmod-nvidia
	- Wait atleast 5-10 minutes before proceeding further
	- modinfo -F version nvidia			--> do not proceed until this prints out the driver version
	- sudo systemctl reboot
	- Ensure that Nouveau is blacklisted in the kernel command-line.
	- [Optional] Add CUDA support:
		- sudo dnf install xorg-x11-drv-nvidia-cuda
		- nvidia-smi				--> this should print out GPU info if CUDA support was properly added
	- sudo grubby --update-kernel=ALL --args="nvidia-drm.modeset=1"
	- sudo systemctl reboot

6) Perform a sanity test of the HW.

7) Configure system settings.

8) Setup casual-use apps:
	- sudo dnf install vlc
	- sudo dnf install java
	- sudo dnf install google-chrome-stable
	- sudo dnf groupinstall Multimedia
	- sudo dnf install blender
	- sudo dnf install gimp
	- sudo dnf install yacreader
	- sudo dnf install transmission
	- Install 1Password from official website.
	- Install Visual Studio Code from official website.
	- Setup WhatsApp Web.
	- Setup Libreoffice. For details, see https://youtu.be/G0che2Az9hw?si=srUlNr3YHD33ByAd
		- sudo dnf install mscore-fonts-all		--> needed for MS fonts
	- Remove unnecessary apps.

9) Set up the development environment.
	- Git: oracle/git
	- Linux kernel: oracle/linux-kernel/docs
	- Containers: oracle/containers
	- Arduino CLI: https://arduino.github.io/arduino-cli/latest
	- Zephyr: https://docs.zephyrproject.org/latest/develop/getting_started

10) [Optional] Set up USB/IP (Windows Server - Fedora client)
	- Install usbipd-win on the server:
		* winget install -e --id dorssel.usbipd-win
	- Setup usbip on the client:
		* Make sure that the vhci-hcd and usbip_core kernel modules are loaded.
			- modprobe vhci-hcd		--> should also load usbip_core as a dependency
		* To automatically load these modules at startup, add the following into /etc/modules-load.d/${USER}.conf:
			vhci-hcd
		* sudo dnf install usbip
	- Connect a USB device to the client:
		* Bind the device on the server (use Powershell with Administrator privileges):
			- usbipd list
			- usbipd bind -i <VID>:<DID>
		* Attach the device on the client:
			- sudo usbip list -r <IP-Address-of-Server>
			- sudo usbip attach -r <IP-Address-of-Server> -b <BUSID>
	- Disconnect a USB device from the client:
		* Detach the device from the client:
			- sudo usbip port
			- sudo usbip detach -p <port-number>
		* Unbind the device on the server (use Powershell with Administrator privileges):
			- usbipd unbind -i <VID>:<DID>

11) [Optional] Set up AI assistance.
	- Install an AI-assisted terminal emulator, e.g. Warp. For details, see: https://www.warp.dev
	- Install LLM chatbot(s). For details, see: https://github.com/ollama/ollama

12) [Optional] Set up the gaming environment.
	- sudo dnf install steam
	- sudo dnf install lutris
