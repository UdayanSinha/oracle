Tested on Legion Pro 7i 16IRX8H with Ubuntu 24.04 LTS.
Battery Charging Limiter on Legion Pro 7i 16IRX8H: /sys/bus/platform/drivers/ideapad_acpi/VPC2004:00/conservation_mode

1) Perform a system update and install general-purpose packages:
	- sudo apt update
	- sudo apt upgrade
	- sudo apt install htop
	- sudo apt install curl
	- sudo apt install git
	- sudo apt install gnupg2
	- sudo apt install efivar
	- sudo apt install acpitool
	- sudo apt install pciutils
	- sudo apt install i2c-tools
	- sudo apt install openssh-server
	- sudo apt install gparted
	- sudo apt install vlc
	- sudo apt install blender
	- sudo apt install gimp
	- sudo apt install mcomix
	- Install Google Chrome from official website.
	- Install 1Password from official website (also available as a snap).
	- Setup WhatsApp Web.
	- Setup Libreoffice. For details, see https://youtu.be/G0che2Az9hw?si=srUlNr3YHD33ByAd
	- Remove unnecessary apps.
	- sudo systemctl reboot

2) Setup SSH server:
	- ssh-keygen -t rsa -b 4096
	- eval "$(ssh-agent -s)"
	- sudo systemctl enable ssh
	- sudo systemctl start ssh
	- sudo touch /etc/ssh/sshd_config.d/${USER}.conf
	- Add the following settings into /etc/ssh/sshd_config.d/${USER}.conf:
		PasswordAuthentication no
		PermitRootLogin no
		PubkeyAuthentication yes
	- touch ~/.ssh/authorized_keys			--> add client public keys to this file
	- sudo systemctl reload ssh

3) Perform a sanity test of the HW.

4) Configure system settings.

5) [Optional] Set up USB/IP (Windows Server - Ubuntu client):
	- Install usbipd-win on the server:
		* winget install -e --id dorssel.usbipd-win
	- Setup usbip on the client:
		* Make sure that the vhci-hcd and usbip_core kernel modules are loaded.
			- modprobe vhci-hcd		--> should also load usbip_core as a dependency
		* To automatically load these modules at startup, add the following into /etc/modules-load.d/${USER}.conf:
			vhci-hcd
		* sudo apt install linux-tools-$(uname -r) hwdata
		* sudo apt install linux-tools-generic
	- Connect a USB device to the client:
		* Bind the device on the server (use Powershell with Administrator privileges):
			- usbipd list
			- usbipd bind -i <VID>:<DID>
		* Attach the device on the client:
			- sudo usbip list -r <IP-Address-of-Server>
			- sudo usbip attach -r <IP-Address-of-Server> -b <BUSID>
	- Disconnect a USB device from the client:
		* Detach the device from the client:
			- sudo usbip port
			- sudo usbip detach -p <port-number>
		* Unbind the device on the server (use Powershell with Administrator privileges):
			- usbipd unbind -i <VID>:<DID>

6) Set up the development environment:
	- Git: oracle/misc
	- Emacs: oracle/misc
		* sudo apt install emacs
		* Setup emacs config-file and download necessary packages.
		* Setup Emacs daemon. For details, see: https://www.emacswiki.org/emacs/EmacsAsDaemon
		* Setup Emacs client. For details, see: https://www.emacswiki.org/emacs/EmacsClient
	- Linux kernel: oracle/linux-kernel/docs
	- Containers: oracle/containers
	- Arduino CLI: https://arduino.github.io/arduino-cli/latest
	- Zephyr: https://docs.zephyrproject.org/latest/develop/getting_started
	- Work apps.

7) Set up ufw rules:
	- sudo ufw enable
	- sudo ufw allow ssh
	- sudo ufw limit ssh
	- sudo ufw status verbose

8) [Optional] Set up AI assistance:
	- Install an AI-assisted terminal emulator, e.g. Warp. For details, see: https://www.warp.dev
	- Install LLM chatbot(s). For details, see: https://github.com/ollama/ollama

9) [Optional] Set up the gaming environment:
	- sudo apt install steam
	- sudo apt install lutris
