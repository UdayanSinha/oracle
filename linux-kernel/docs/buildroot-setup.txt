Tested on Ubuntu 22.04 LTS with QEMU x86.

Buildroot official website:
	* https://buildroot.org

1) Download Buildroot and its dependencies.

2) Compile a Linux image:
	* If using WSL:
 		- PATH must be redefined with the Windows paths removed.
   		- Otherwise the compilation will fail.
	* Buildroot uses a defconfig-based setup similar to Linux Kernel.
	* make qemu_x86_64_defconfig
 		- To list available defconfig files: make list-defconfigs
		- To make changes to the default defconfig: make menuconfig
	* make -j16

3) The compile output is located at: /path/to/buildroot-dir/output
	a) images/ --> kernel, rootfs, bootloader images to put on the target.
	b) build/ --> directory where all the components were built, one sub-directory per component.
	c) host/ --> sysroot + host-tools to compile target SW (aka SDK).
	d) staging/ --> symlink to the sysroot under host/.
	e) target/ --> Near-complete rootfs, but should NOT be confused with the one under images/.

4) A ready-made script is provided for starting QEMU with the compiled rootfs and kernel:
	* /path/to/buildroot-dir/output/images/start-qemu.sh serial-only

5) [Optional] If an initramfs is needed, it should be enabled in the defconfig:
	* BR2_TARGET_ROOTFS_CPIO

6) [Optional] To override the source code location for a given package:
	a) An override file is used whose path is provided by BR2_PACKAGE_OVERRIDE_FILE.
	b) Default value of BR2_PACKAGE_OVERRIDE_FILE: $(CONFIG_DIR)/local.mk
		* CONFIG_DIR is where the .config file is located.
	c) In this file, the override for a given package is specified as:
		* <PKG>_OVERRIDE_SRCDIR = /path/to/pkg/
		* E.g. To override for the kernel source code:
			- LINUX_OVERRIDE_SRCDIR = /path/to/linux/
	d) Buildroot will not use the default location to download, extract and patch an overriden package.
		* It will copy the source code from the provided override path and use that instead.
			- These will be copied to: /path/to/buildroot-dir/output/build/<pkg>-custom.
		* Note that "make clean" will not touch the directories of overridden packages.
	e) If the source code of an overriden package is modified afterwards:
		* <pkg>-rebuild can be used to trigger a re-copy and compile the (new) source code again.
		* E.g. To re-copy and compile for the kernel source code:
			- make linux-rebuild all
